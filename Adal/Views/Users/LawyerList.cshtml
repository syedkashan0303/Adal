@model IEnumerable<Core.CoreClass.UsersDTO>

@{
    ViewData["Title"] = "LawyerList";
}

<h1 class="mb-4">Lawyer List</h1>

<div class="row mb-4">
    <div class="col-md-6">
        <a class="btn btn-primary" asp-action="Register">Create New</a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Email</th>
                <th>Full Name</th>
                <th>Date of Birth</th>
                <th>Contact</th>
                <th>City</th>
                <th>User Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
                    <td>@Html.DisplayFor(modelItem => item.Contact)</td>
                    <td>@Html.DisplayFor(modelItem => item.CityName)</td>
                    <td>@Html.DisplayFor(modelItem => item.UserRoleName)</td>
                    <td>
                        <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        @* <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a> *@
                        <button onclick="deleteRecord" data-record-id="@item.Id">Delete</button>
                        @* <li data-record-id="1">Record 1 <button onclick="deleteRecord(1)">Delete</button></li> *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>




<script>
    function deleteRecord(recordId) {
        // Create JSON request to delete the record with the given ID
        // var request = {
        //     method: 'DELETE',
        //     headers: {
        //         'Content-Type': 'application/json'
        //     },
        //     body: JSON.stringify({
        //         recordId: recordId
        //     })
        console.log(recordId);
        };

        // Here you can perform the fetch request to your server
        fetch('/deleteRecordEndpoint', request)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Handle success response from server
                console.log('Record deleted successfully:', data);
                // Optionally, update the UI to reflect the deletion
                var listItem = document.querySelector('[data-record-id="' + recordId + '"]');
                if (listItem) {
                    listItem.remove();
                }
            })
            .catch(error => {
                // Handle error
                console.error('Error deleting record:', error);
            });
    }
</script>